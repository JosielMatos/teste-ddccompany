generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["multiSchema"]
  binaryTargets   = ["native", "debian-openssl-1.1.x"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DATABASE_URL")
  schemas   = ["public", "workspace"]
}

model Pokemon {
  id               Int       @id @default(autoincrement())
  name             String    @unique
  type             String
  ability          String
  image            String
  createdAt        DateTime  @default(now()) @db.Timestamp(6)
  updatedAt        DateTime  @default(now()) @db.Timestamp(6)

  @@schema("workspace")
}


model User {
  id               Int       @id @default(autoincrement())
  email     String   @unique
  name      String?
  posts     Post[]
  profile   Profile?
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@schema("workspace")
}

model Profile {
  id     Int        @id @default(autoincrement())
  bio    String?
  user   User    @relation(fields: [userId], references: [id])
  userId Int        @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@schema("workspace")
}

model Post {
  id        Int           @id @default(autoincrement())
  title     String
  content   String?
  published Boolean    @default(false)
  author    User       @relation(fields: [authorId], references: [id])
  authorId  Int
  categories PostCategory[]
  createdAt DateTime   @default(now())
  updatedAt DateTime   @default(now())

  @@schema("workspace")
}

model Category {
  id    Int         @id @default(autoincrement())
  name  String   @unique
  posts PostCategory[]
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@schema("workspace")
}

model PostCategory {
  post       Post     @relation(fields: [postId], references: [id])
  postId     Int
  category   Category @relation(fields: [categoryId], references: [id])
  categoryId Int
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@id([postId, categoryId])
  @@schema("workspace")
}

model LargeTable {
  id        Int         @id @default(autoincrement())
  name      String
  value     Float
  timestamp DateTime
  details   String
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  @@schema("workspace")
}